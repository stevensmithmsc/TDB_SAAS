@model TDB_SAAS.ViewModels.PersonFormViewModel
@{
    ViewBag.Title = Model.ID == 0 ? "New Person" : Model.DisplayName;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.ID == 0)
{
    <h2>New Person</h2>
}
else
{
    <h2>Edit Person: @Model.DisplayName</h2>
}

@using (Html.BeginForm("Save", "Person"))
{
    @Html.ValidationSummary(true, "Please correct the highlighted fields");
    <div class="row">
        <div class="col-md-4 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(m => m.TitleID)
                @Html.DropDownListFor(m => m.TitleID, null, "Select Title", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.TitleID)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Forename)
                @Html.TextBoxFor(m => m.Forename, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Forename)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.MiddleName)
                @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.MiddleName)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Surname)
                @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Surname)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PreferredName)
                @Html.TextBoxFor(m => m.PreferredName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PreferredName)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Gender)
                @Html.EnumDropDownListFor(m => m.Gender, "Select Gender", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Gender)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CohortID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(m => m.CohortID, null, "Select Cohort", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CohortID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-4 col-sm-6">
            <div class="form-group">
                @Html.LabelFor(m => m.JobTitle)
                @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.JobTitle)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LineManID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(m => m.LineManID, null, "Select Line Manager", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.LineManID, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FinanceCode, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(m => m.FinanceCode, null, "Select Finance Cost Code", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FinanceCode, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SubjectiveID, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(m => m.SubjectiveID, null, "Select Subjective Code", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.FinanceCode, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Phone)
                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Phone)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Comments)
                @Html.TextAreaFor(m => m.Comments, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Comments)
            </div>
        </div>
        <div class="col-md-4 col-sm-6">
            <div class="form-group">
                @for (int i = 0; i < Model.Flags.Count(); i++)
                {
                    <div class="checkbox">
                        @Html.HiddenFor(m => m.Flags[i].Flag.ID)
                        @Html.CheckBoxFor(m => m.Flags[i].Selected)
                        @Html.LabelFor(m => m.Flags[i].Selected, Model.Flags[i].Flag.TheFlag)
                        @Html.HiddenFor(m => m.Flags[i].Flag.TheFlag)
                    </div>
                }
                @Html.ValidationMessageFor(m => m.Flags)
            </div>
        </div>
        <div class="col-md-4 col-sm-6">
            <h4>Boroughs</h4>
            <div class="form-group">
                @for (int i = 0; i < Model.Boroughs.Count(); i++)
                {
                    <div class="checkbox">
                        @Html.HiddenFor(m => m.Boroughs[i].Boro.ID)
                        @Html.CheckBoxFor(m => m.Boroughs[i].Selected)
                        @Html.LabelFor(m => m.Boroughs[i].Selected, Model.Boroughs[i].Boro.BoroughName)
                        @Html.HiddenFor(m => m.Boroughs[i].Boro.BoroughName)
                    </div>
                }
                @Html.ValidationMessageFor(m => m.Boroughs)
            </div>
        </div>
        <div class="col-md-4 col-sm-6">
            <hr />
            <div class="form-group">
                @for (int i = 0; i < Model.MHCs.Count(); i++)
                {
                    <div class="checkbox">
                        @Html.HiddenFor(m => m.MHCs[i].Service.ID)
                        @Html.CheckBoxFor(m => m.MHCs[i].Selected)
                        @Html.LabelFor(m => m.MHCs[i].Selected, Model.MHCs[i].Service.ServiceName)
                        @Html.HiddenFor(m => m.MHCs[i].Service.ServiceName)
                    </div>
                }
                @Html.ValidationMessageFor(m => m.MHCs)
            </div>
        </div>
    </div>
    if (Model.ID != 0)
    {
        <div class="row">
            <div class="col-md-4 col-sm-6">
                <h4>Services</h4>
                <ul>
                    @for (int i = 0; i < Model.Services.Count(); i++)
                    {
                        <li>
                            @Model.Services[i].ServiceName
                            @Html.HiddenFor(m => m.Services[i].ServiceName)
                        </li>
                    }
                </ul>
                <button class="btn btn-primary" data-toggle="modal" data-target="#serviceModal">Add Service</button>
            </div>
            <div class="col-md-8 col-sm-6">
                <h4>Team Memberships</h4>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Memberships[0].Team)</td>
                            <td>@Html.DisplayNameFor(m => m.Memberships[0].Main)</td>
                            <td>@Html.DisplayNameFor(m => m.Memberships[0].Active)</td>
                        </tr>
                    </thead>
                    @for (int i = 0; i < Model.Memberships.Count(); i++)
                    {
                        <tr>
                            <td>
                                @Html.HiddenFor(m => m.Memberships[i].ID)
                                @Model.Memberships[i].Team.TeamName
                            </td>
                            <td>@Html.CheckBoxFor(m => m.Memberships[i].Main)</td>
                            <td>@Html.CheckBoxFor(m => m.Memberships[i].Active)</td>
                        </tr>
                    }
                </table>
                @Html.ValidationMessageFor(m => m.Memberships)
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                    Add New Team Membership
                </button>
            </div>
        </div>
    }

    @Html.HiddenFor(m => m.ID)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
    @Html.ValidationMessageFor(m => m.ID)
}
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">New Team for @Model.Forename @Model.Surname</h4>
            </div>
            <form id="newmem">
                <div class="modal-body">
                    <input name="StaffID" id="StaffID" type="hidden" value="@Model.ID" data-val-required="The TeamID field is required." data-val-number="The field TeamID must be a number." data-val="true">
                    <div class="form-group">
                        <label for="TeamID">Team: </label>
                        @Html.DropDownList("TeamID", new SelectList(ViewBag.TeamList, "ID", "TeamName"), "Please Select Team", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="checkbox">
                        <label for="Active">Active</label>
                        <input type="checkbox" id="Active" name="Active" value="true" data-val="true" checked="checked">
                    </div>
                    <div class="checkbox">
                        <label for="Main">Main</label>
                        <input type="checkbox" id="Main" name="Main" value="true" data-val="true">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Member</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Service Modal -->
<div class="modal fade" id="serviceModal" tabindex="-1" role="dialog" aria-labelledby="serviceModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">New Service for @Model.Forename @Model.Surname</h4>
            </div>
            <form id="newserv">
                <div class="modal-body">
                    <input name="StaffID" id="StaffID" type="hidden" value="@Model.ID" data-val-required="The TeamID field is required." data-val-number="The field TeamID must be a number." data-val="true">
                    <div class="form-group">
                        <label for="ServiceID">Service: </label>
                        @Html.DropDownList("ServiceID", new SelectList(ViewBag.ServiceList, "ID", "ServiceName"), "Please Select Service", htmlAttributes: new { @class = "form-control" })
                    </div>             
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Service</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $( '#newmem' ).submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/api/TeamMembers",
                    data: $("#newmem").serialize(),
                    success: function (data) {
                        $('#myModal').modal('hide');
                        console.log(data);
                        location.reload(true);
                    },
                    error: function (data) {
                        alert("There was a problem");
                        console.log(data);
                    }
                });
            });
            $('#serviceModal').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/api/ServiceMembers",
                    data: $("#newserv").serialize(),
                    success: function (data) {
                        $('#serviceModal').modal('hide');
                        console.log(data);
                        location.reload(true);
                    },
                    error: function (data) {
                        alert("There was a problem");
                        console.log(data);
                    }
                });
            });
        });
    </script>
}