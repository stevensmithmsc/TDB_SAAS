@model TDB_SAAS.ViewModels.TeamFormViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Team</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.TeamName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TeamName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TeamName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FinanceCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("FinanceCode", null, "Please Select Cost Code", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FinanceCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LeaderID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("LeaderID", null, "Please Select Team Leader", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LeaderID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CohortID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CohortID", null, "Please Select Cohort", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CohortID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NoTrain, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.NoTrain)
                            @Html.ValidationMessageFor(model => model.NoTrain, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <h4>Services</h4>
                <ul>
                    @for (int i = 0; i < Model.Services.Count(); i++)
                    {
                        <li>@Model.Services[i].ServiceName</li>
                    }
                </ul>
                <button class="btn btn-primary" data-toggle="modal" data-target="#serviceModal">Add Service</button>
            </div>
            <div class="col-md-2">
                <h4>Boroughs</h4>
                <div class="form-group">
                    @for (int i = 0; i < Model.Boroughs.Count(); i++)
                    {
                        <div class="checkbox">
                            @Html.HiddenFor(m => m.Boroughs[i].Boro.ID)
                            @Html.CheckBoxFor(m => m.Boroughs[i].Selected)
                            @Html.LabelFor(m => m.Boroughs[i].Selected, Model.Boroughs[i].Boro.BoroughName)
                            @Html.HiddenFor(m => m.Boroughs[i].Boro.BoroughName)
                        </div>
                    }
                    @Html.ValidationMessageFor(m => m.Boroughs)
                </div>
                <hr />
                <div class="form-group">
                    @for (int i = 0; i < Model.MHCs.Count(); i++)
                    {
                        <div class="checkbox">
                            @Html.HiddenFor(m => m.MHCs[i].Service.ID)
                            @Html.CheckBoxFor(m => m.MHCs[i].Selected)
                            @Html.LabelFor(m => m.MHCs[i].Selected, Model.MHCs[i].Service.ServiceName)
                            @Html.HiddenFor(m => m.MHCs[i].Service.ServiceName)
                        </div>
                    }
                    @Html.ValidationMessageFor(m => m.MHCs)
                </div>
            </div>
            <div class="col-md-5">
                <h4>Members</h4>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Members[0].Staff)</td>
                            <td>@Html.DisplayNameFor(m => m.Members[0].Main)</td>
                            <td>@Html.DisplayNameFor(m => m.Members[0].Active)</td>
                        </tr>
                    </thead>
                @for (int i = 0; i < Model.Members.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => m.Members[i].ID)
                            @Model.Members[i].Staff.GetFullName()
                        </td>
                        <td>@Html.CheckBoxFor(m => m.Members[i].Main)</td>
                        <td>@Html.CheckBoxFor(m => m.Members[i].Active)</td>
                    </tr>
                }
                </table>
                @Html.ValidationMessageFor(m => m.Members)
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
                    Add New Member
                </button>
            </div>
        </div>


        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">New Team Member for @Model.TeamName</h4>
            </div>
            <form id="newmem">
                <div class="modal-body">
                    <input name="TeamID" id="TeamID" type="hidden" value="@Model.ID" data-val-required="The TeamID field is required." data-val-number="The field TeamID must be a number." data-val="true">
                    <div class="form-group">
                        <label for="StaffID">Staff Member: </label>
                        @Html.DropDownList("StaffID", new SelectList(ViewBag.StaffList, "ID", "FullName"), "Please Select Staff Member", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="checkbox">
                        <label for="Active">Active</label>
                        <input type="checkbox" id="Active" name="Active" value="true" data-val="true" checked="checked">
                    </div>
                    <div class="checkbox">
                        <label for="Main">Main</label>
                        <input type="checkbox" id="Main" name="Main" value="true" data-val="true">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Member</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Service Modal -->
<div class="modal fade" id="serviceModal" tabindex="-1" role="dialog" aria-labelledby="serviceModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">New Service for @Model.TeamName</h4>
            </div>
            <form id="newserv">
                <div class="modal-body">
                    <input name="TeamID" id="TeamID" type="hidden" value="@Model.ID" data-val-required="The TeamID field is required." data-val-number="The field TeamID must be a number." data-val="true">
                    <div class="form-group">
                        <label for="ServiceID">Service: </label>
                        @Html.DropDownList("ServiceID", new SelectList(ViewBag.ServiceList, "ID", "ServiceName"), "Please Select Service", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Add Service</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{
    <script>
        $(document).ready(function () {
            $( '#newmem' ).submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/api/TeamMembers",
                    data: $("#newmem").serialize(),
                    success: function (data) {
                        $('#myModal').modal('hide');
                        console.log(data);
                        location.reload(true);
                    },
                    error: function (data) {
                        alert("There was a problem");
                        console.log(data);
                    }
                });
            });
            $('#serviceModal').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/api/ServiceTeams",
                    data: $("#newserv").serialize(),
                    success: function (data) {
                        $('#serviceModal').modal('hide');
                        console.log(data);
                        location.reload(true);
                    },
                    error: function (data) {
                        alert("There was a problem");
                        console.log(data);
                    }
                });
            });
        });


    </script>
}


